{% extends 'base.html.twig' %}

{% block title %}ShopKeeper{% endblock %}

{% block body %}
<div class="w-full h-30 overflow-hidden">
    <img src="{{ asset('uploads/' ~ shop_keeper.filename ) }}" alt="im" width="100%" class="object-cover w-full h-72">
</div>
<div class="flex bg-gray-100">
    {% if app.user %}
        <a href="{{ path('app_shop_keeper_edit', {'id': shop_keeper.id}) }}"class="bg-blue-500 px-4 py-2 rounded text-white hover:bg-green-600">edit</a>
        {{ include('shop_keeper/_delete_form.html.twig')}}
        <a href="{{ path('app_dashboard') }}"class="bg-blue-500 px-4 py-2 rounded text-white hover:bg-green-600">back to list</a>
        <a href="{{ path('app_opening_hours_new', {'shop_keeper': shop_keeper.id}) }}">Ajouter horaire</a>
    {% else %}
        <a class="ml-5" href="{{ path('app_home') }}">retour</a>
    {% endif %}
</div>

<container class="flex justify-center items-center h-1/2 pt-10 pb-10 bg-gray-100"> <!-- Centre le contenu et ajoute un fond clair -->
    <div class="info flex justify-around bg-white shadow-lg rounded-lg p-6 w-4/5"> <!-- Ajoute de l'ombre, un fond blanc et des bords arrondis -->
        <div class="w-1/2 ml-6 mt-6 mr-6"> <!-- Ajout d'une marge à droite pour l'équilibre -->
            <div class="px-4 sm:px-0">
                <h1 class="font-bold uppercase text-3xl leading-7 text-gray-900">{{ shop_keeper.name }}</h1>
                <p class="mt-1 max-w-2xl text-sm leading-6 text-gray-500">{{ shop_keeper.description }}</p>
                <div class="flex space-x-4 mt-2">
                    {% if shop_keeper.phone %} <!-- Si phone existe -->
                        <span class="font-bold">{{ shop_keeper.phone }}</span>
                    {% endif %}
                    
                    {% if shop_keeper.email %} <!-- Si email existe -->
                        <span class="font-bold">{{ shop_keeper.email }}</span>
                    {% endif %}
                </div>
                <div class="mt-4">
                    <div class="text-gray-700 font-semibold">{{ shop_keeper.streetName }}</div>
                    <div class="text-gray-600">{{ shop_keeper.postalCode }} {{ shop_keeper.city }}</div>
                </div>
            </div>
        </div>
        <div id="map" class="w-1/2 rounded-lg"></div>
    </div>
</container>
<div class="flex items-center justify-center bg-gray-100">
    <h1 class="text-3xl font-bold text-gray-900">
        Derniers posts
    </h1>
</div>
<div class="grid grid-cols-3 gap-8 justify-items-center bg-gray-100 pt-10 pb-10">
    {% for post in posts %}
        <div class="bg-white rounded-lg overflow-hidden w-96 shadow">
            <div class="w-full h-56 overflow-hidden rounded flex justify-center items-center">
                <img class="w-full" src="{{ asset('uploads/' ~ post.urlImage) }}" alt="Card image cap">
            </div>
            <div class="p-4">
                <h5 class="font-bold text-xl mb-2 uppercase">{{ post.title }}</h5>
            </div>
            <div class="h-42 p-4 overflow-y-auto">
                <p class="text-gray-700 mb-4">{{ post.description }}</p>
            </div>
            <ul class="divide-y">
                <li class="px-4 py-2">{{ post.createdAt | date('d M Y') }}</li>
            </ul>
        </div>        
    {% else %}
        <p>
            Aucun post du commerçant
        </p>
    {% endfor %}
</div>

    {% if app.user is null %}
        <a href="{{ path('app_notice_new', {'shop_keeper': shop_keeper.id}) }}">Ajouter un commentaire</a>
    {% endif %}


        <div class="w-full h-72 overflow-x-auto overflow-y-hidden">
                <div class="flex ">
                    {% for notice in notices %}
                        <div class="flex-none w-64 h-48 bg-gray-200 m-4 text-center rounded-xl">
                            <div class="mt-10 font-semibold">   
                                <p class="text-xl capitalize">{{notice.postedBy}}</p>
                            </div> 
                            <br>
                            <div>    
                                <p>{{notice.text}}</p>
                            </div> 
                            <br>
                            {% for i in 1..5 %}
                                {% if i <= notice.note %}
                                    <span class="star filled text-yellow-600">&#9733;</span>
                                {% else %}
                                    <span class="star">&#9734;</span>
                                {% endif %}  
                            {% endfor %}    
 
                        </div>
                    {% endfor %} 
                </div>
        </div>

    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>PostedBy</th>
                <th>Text</th>
                <th>Note</th>
                <th>PostedAt</th>
            </tr>
        </thead>
        <tbody>
        {% for notice in notices %}
            <tr>
                <td>{{ notice.id }}</td>
                <td>{{ notice.postedBy }}</td>
                <td>{{ notice.text }}</td>
                <td>{{ notice.note }}</td>
                <td>{{ notice.postedAt ? notice.postedAt|date('d/m/Y') : '' }}</td>
            </tr>
        {% else %}
            <tr>
                <td colspan="6">no records found</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
{% endblock %}


{% block javascripts %}
<script>(g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})
        ({key: "AIzaSyASg1yYECy1s1oCtMdgz3u2Z0HFKrwCSmY", v: "weekly"});</script>
<script>
let lattitude;
let longitude;

async function getCoordinates() {
    const response = await fetch(`https://api-adresse.data.gouv.fr/search/?q=${encodeURIComponent("{{ shop_keeper.streetName }} {{ shop_keeper.postalCode }}")}&limit=15`);
    
    if (!response.ok) {
        throw new Error(`HTTP error! Status: ${response.status}`);
    }

    const data = await response.json();
    lattitude = data.features[0].geometry.coordinates[1];
    longitude = data.features[0].geometry.coordinates[0];
}

let map;

async function initMap() {
    await getCoordinates(); // Assurez-vous d'abord d'obtenir les coordonnées

    console.log(lattitude, longitude, 'toto');
    const position = { lat: lattitude, lng: longitude };
    const { Map } = await google.maps.importLibrary("maps");
    const { AdvancedMarkerView } = await google.maps.importLibrary("marker");

    map = new Map(document.getElementById("map"), {
        zoom: 14,
        center: position,
        mapId: "DEMO_MAP_ID",
    });
    const marker = new AdvancedMarkerView({
        map: map,
        position: position,
        title: "Uluru",
    });
}

initMap().catch(error => {
    console.error("Une erreur s'est produite:", error);
});

</script>
{% endblock %}